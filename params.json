{"name":"His unification","tagline":"","body":"#Installation\r\n\r\n1. Entpacken nach $CFG->wwwroot.'\\local\\lsf_unification' und Moodle Plugin-Installation starten\r\n2. Datenbank einrichten: (eines der folgenden)\r\n  * Testdatenbank (postgres) mit Beispieldaten (siehe beispieltabellen.sql) einrichten\r\n  * Views mit Live-Daten entsprechend der unter [Notwendige Tabellen/Sichten auf Tabellen] beschriebenen Sichten auf die LSF-DB bereitstellen\r\n2. unter 'Administrator' -> 'Plugins' -> 'Lokale Plugins' befinden sich vier Erweiterungen 'LSF Unification Config', 'LSF Unification Matching', 'LSF Deeplink Removal' und 'LSF Remote Request Handling'. Siehe [Menüpunkte]\r\n3. Zuordnung zwischen Moodle-Kategorien und LSF-Überschriften generieren [wwwroot/local/lsf_unification/helptablemanager.php]\r\n  1. Hilfstabelle aktualisieren -> **Update Helptable With HIS-LSF data** auswählen\r\n  2. LSF-Überschriften zu Moodle-Kategorien zuordnen.'-> **Create New Mappings**\r\n4. Kursbeantragung auf z.B. der Startseite verlinken [wwwroot/local/lsf_unification/request.php]\r\n```\r\n    <p>Hier können Lehrende der Universität Münster neue Kurse für ihre Veranstaltungen beantragen.<br />Nach Abgabe des Antrags werden Sie per Mail informiert, sobald Ihr Kurs angelegt wurde.</p>\r\n    <div class=\"buttons\">\r\n    <div class=\"singlebutton\"><form method=\"get\" action=\"local/lsf_unification/request.php\">\r\n    <div><input value=\"Kurs beantragen\" type=\"submit\" /></div>\r\n    </form></div>\r\n    </div>\r\n```\r\n\r\n##Menüpunkte\r\n\r\n###'LSF Unification Config' \r\ndient zur Konfiguration von HIS-LSF-Server/DB, zur Zuordnung von Rollen und zur aktivierung einzelner Funktionen.\r\n\r\n###'LSF Unification Matching' \r\ndient zur Zuordnung von Überschriften aus dem LSF zu Kategorien im Moodle (Zu berücksichtigen: LSF-Überschriften werden (zumindest an der WWU) jedes Semester im LSF neu angelegt (jeweils Verweis auf letztsemestrige Überschrift) und muss deshalb hin und wieder aktualisiert werden.\r\n\r\n###'LSF Deeplink Removal' \r\ndient dazu einzelne Rückverlinkungen (siehe HIS Deeplink Web Service) wieder zu entfernen.\r\n\r\n###'LSF Remote Request Handling' \r\ndient dazu Anfragen die von Studenten im Namen von Lehrenden gestellt wurden zu verwalten.\r\n\r\n##Vorhandene Rollen abändern um Konflikte zu vermeiden\r\nMoodle unterscheidet bei Rechten zwischen erlaubt, entzogen und verboten.\r\nIst ein Nutzer in einer Rolle die ein bestimmtes Recht verbietet, ist ihm dieses Recht grundsätzlich verboten, auch wenn es ihm eine andere Rolle erlaubt.\r\nDaher müssen je nach Rechte-Konfiguration vorhandene Rollen angepasst werden, also an den entsprechenden Stellen von \"verboten\" auf \"entzogen\" (was so viel bedeutet wie: nicht erlaubt außer durch eine andere Rolle) umgestellt werden.\r\n\r\nZum Beispiel sollte es für Tutoren und Lehrende nicht verboten sein Kurse wiederherzustellen, da sie dann nicht fehlerfrei die Templates bei der Kurserstellung verwenden können - hier bietet sich die Einstellung \"entzogen\" an, da ihnen die notwendigen Rechte temporär zugeteilt werden.\r\nDie dafür notwendigen Rechte sind insbesondere \"moodle/restore:restorecourse\", \"moodle/restore:restoreactivity\", \"moodle/restore:restoresection\", \"moodle/restore:configure\"\r\n\r\n##Kurs Templates\r\nDozenten können (sofern dies durch die Einstellungen erlaubt wird) bei der Kurserstellung auf Kurs-Templates (spezielle Kurssicherungen) zurückgreifen.\r\nDiese Templates müssen dafür im Ordner [backup_auto_destination]/templates abgelegt werden. Die Templates können in Kategorien eingeteilt werden, dazu können Ordner [backup_auto_destination]/[KategorieName] angelegt werden, in die dann die Kurs-Templates abgelegt werden.\r\nDabei ist [backup_auto_destination] der in den Moodle-Einstellungen festgelegte entsprechende Pfad.\r\nDie hinterlegten Dateien müssen das Format template[0-9]+.(mbz|txt) haben (z.B. template2.mbz und template2.txt). \r\nDie eigentliche Kursvorlage, die .mbz Datei, ist ein normales Kursbackup eines Beispielkurses (dieser sollte keine Einschreibemethoden haben). Einen zugehörigen Beschreibungstext, der dem Nutzer angezeigt wird, kann man in der txt-Datei ablegen, wobei die erste Zeile einen Namen angibt und alle weiteren Zeilen eine Beschreibung beinhalten können.\r\nEin Beispiel für die Kursvorlage-Dateien ist in course_templates.zip zu finden.\r\n\r\n##Kursinhalte aus Kurssicherungen übernehmen\r\nBei entsprechender Einstellung des Plugins können Dozenten die Inhalte aus alten Kursen in den neuen Kurs wiederherstellen.\r\nHierzu müssen die Kurssicherungen in dem entsprechenden Pfad für Kurssicherungen hinterlegt sein.\r\n\r\n##Erweiterung: HIS Deeplink Web Service\r\nDie Universität Dortmund hat eine Erweiterung für HIS-LSF geschrieben, die es ermöglicht, einer LSF-Veranstaltung einen Link zum Moodle-Kurs hinzuzufügen. Nachdem ein Kurs im Moodle über dieses Moodle-Plugin erstellt wurde, wird der 'HIS Deeplink Web Service' aufgerufen. So wird dem LSF mitgeteilt, dass nun ein Moodle-Kurs zu der LSF-Veranstaltung existiert. Die Veranstaltungsbeschreibung im LSF wird somit um einen Link zu der Moodle-Veranstaltung ergänzt.\r\n\r\n##Erweiterung: Automatisierte Studenteneinschreibung\r\nEs ist möglich durch eine Anpassung des Database-Enrolmentplugins Studenten automatisiert in die Kurse einzuschreiben, die ins Learnweb importiert wurden. Genauere Informationen finden sich dazu im Ordner ./enrol_database.\r\n\r\n##Stundenplanimport\r\nUm den Stundenplanimport zu aktivieren, müssen geringfuegige Änderungen im Kalender-Modul von Moodle vorgenommen werden. Genauere Informationen finden sich dazu im Ordner ./cal_stundenplan.\r\n\r\n##Notwendige Tabellen/Sichten auf Tabellen\r\nDie Namen der Sichten können in den Definitionen zu Beginn der lib_his.php Datei manipuliert werden.\r\n\r\n###Sicht der Dozenten\r\n(HIS_PERSONAL)\r\nAnmerkung: zivk ist die Nutzerkennung des Dozenten, der sich bei uns einloggt, hierüber werden die Dozenten gematcht\r\n```sql\r\nSELECT DISTINCT personal.pid, nutzer.\"login\", \"replace\"(lower(\"replace\"(\"replace\"(peremail.email::text, ' '::text, ''::text), '@uni-muenster.de'::text, ''::text)), 'atuni-muensterdotde'::text, ''::text) AS zivk, personal.akadgrad, personal.vorname, personal.nachname\r\n   FROM personal\r\n   LEFT JOIN r_verpers ON personal.pid = r_verpers.pid\r\n   LEFT JOIN k_verkenn ON k_verkenn.verkennid = r_verpers.verkennid\r\n   LEFT JOIN r_pernutzer ON r_pernutzer.pid = personal.pid\r\n   LEFT JOIN kontakt ON kontakt.tabpk = personal.pid\r\n   LEFT JOIN nutzer ON nutzer.nid = r_pernutzer.nid\r\n   LEFT JOIN peremail ON peremail.pid = personal.pid\r\n  ORDER BY personal.pid, nutzer.\"login\", \"replace\"(lower(\"replace\"(\"replace\"(peremail.email::text, ' '::text, ''::text), '@uni-muenster.de'::text, ''::text)), 'atuni-muensterdotde'::text, ''::text), personal.akadgrad, personal.vorname, personal.nachname;\r\n```\r\n\r\n### Sicht der Veranstaltungen\r\n(HIS_VERANSTALTUNG)\r\n```sql\r\nSELECT veranstaltung.veranstid, veranstaltung.veranstnr, veranstaltung.semester, veranstaltung.kommentar, veranstaltung.zeitstempel, k_semester.ktxt AS semestertxt, k_verart.dtxt AS veranstaltungsart, veranstaltung.dtxt AS titel, 'http://uvlsf.uni-muenster.de/qisserver/rds?state=verpublish&status=init&vmfile=no&moduleCall=webInfo&publishConfFile=webInfo&publishSubDir=veranstaltung&publishid='::text || veranstaltung.veranstid::text AS urlveranst\r\n   FROM veranstaltung\r\n   LEFT JOIN k_semester ON k_semester.semid = veranstaltung.semester\r\n   LEFT JOIN k_verart ON k_verart.verartid = veranstaltung.verartid\r\n  WHERE (veranstaltung.semester IN ( SELECT k_semester.semid\r\n   FROM k_semester\r\n  WHERE k_semester.semstatus = 1)) AND (veranstaltung.veranstid IN ( SELECT r_vvzzuord.veranstid\r\n   FROM r_vvzzuord)) AND (veranstaltung.aikz = 'A'::bpchar OR veranstaltung.aikz IS NULL);\r\n```\r\n   \r\n### Sicht Zuordnung Veranstaltung zu Personal\r\n(HIS_PERSONAL_VERANST)\r\n```sql\r\n SELECT r_verpers.veranstid, personal.pid, r_verpers.sort, k_verkenn.dtxt AS zustaendigkeit\r\n   FROM personal\r\n   LEFT JOIN r_verpers ON personal.pid = r_verpers.pid\r\n   LEFT JOIN k_verkenn ON k_verkenn.verkennid = r_verpers.verkennid;\r\n```\r\n   \r\n###Sicht zur Pflege der Überschriften\r\n(HIS_UEBERSCHRIFT)\r\n```sql\r\n SELECT r_hierarchie.uebergeord, r_hierarchie.untergeord, r_hierarchie.semester, ueberschrift.zeitstempel, ueberschrift.ueid, ueberschrift.eid, ueberschrift.txt, ueberschrift.quellid, veranstaltung.veranstid\r\n   FROM r_hierarchie\r\n   LEFT JOIN ueberschrift ON ueberschrift.ueid = r_hierarchie.untergeord\r\n   LEFT JOIN r_vvzzuord ON r_vvzzuord.ueid = ueberschrift.ueid\r\n   LEFT JOIN veranstaltung ON veranstaltung.veranstid = r_vvzzuord.veranstid\r\n  WHERE r_hierarchie.tabelle = 'ueberschrift'::bpchar AND r_hierarchie.beziehung = 'U'::bpchar AND ueberschrift.aikz <> 'I'::bpchar\r\n  ORDER BY r_hierarchie.sortierung, ueberschrift.txt;\r\n```\r\n   \r\n###Sicht zum Auslesen der Veranstaltungsbeschreibung\r\n(HIS_VERANST_KOMMENTAR)\r\n```sql\r\n SELECT veranstaltung.veranstid, blobs.txt AS kommentar, r_blob.sprache\r\n   FROM veranstaltung\r\n   LEFT JOIN r_blob ON veranstaltung.veranstid = r_blob.tabpk\r\n   LEFT JOIN blobs ON r_blob.blobid = blobs.blobid\r\n   LEFT JOIN k_semester ON k_semester.semid = veranstaltung.semester\r\n  WHERE r_blob.tabelle::text = 'veranstaltung'::text AND r_blob.spalte::text = 'kommentar'::text AND (veranstaltung.semester IN ( SELECT k_semester.semid\r\n   FROM k_semester\r\n  WHERE k_semester.semstatus = 1));\r\n```\r\n   \r\n###Sicht zum Import des Stundenplans\r\n(HIS_STDP)\r\n```sql\r\n SELECT DISTINCT veransttermin.vtid AS terminid, veranstaltung.veranstid, r_beleg.tabpk AS mtknr, r_beleg.status\r\n   FROM veransttermin, veranstaltung, r_beleg\r\n  WHERE veransttermin.tabpk = veranstaltung.veranstid AND veransttermin.tabpk = r_beleg.veranstid AND veransttermin.tabelle::text = 'veranstaltung'::text AND (veransttermin.parallelid = r_beleg.parallelid OR (veransttermin.parallelid = 0 OR veransttermin.parallelid IS NULL) AND (r_beleg.parallelid = 0 OR r_beleg.parallelid IS NULL)) AND veranstaltung.semester >= (( SELECT s_lsfsys.aktsem\r\n           FROM s_lsfsys)) AND r_beleg.tabelle = 'sospos'::bpchar AND (r_beleg.status = 'AN'::bpchar OR r_beleg.status = 'ZU'::bpchar OR r_beleg.status = 'SP'::bpchar OR r_beleg.status = 'WL'::bpchar) AND veranstaltung.aikz <> 'I'::bpchar\r\n  ORDER BY veransttermin.vtid, veranstaltung.veranstid, r_beleg.tabpk, r_beleg.status;\r\n```\r\n\r\n#Beispieldaten\r\nZu Testzwecken kann eine Datenbank mit den Beispieltabellen gefüllt werden, die in der Datei beispieltabellen.sql stehen.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}